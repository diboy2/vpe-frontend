import * as React from 'react';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import Box from '@mui/material/Box';
import Stepper from '@mui/material/Stepper';
import Step from '@mui/material/Step';
import StepLabel from '@mui/material/StepLabel';
import Button from '@mui/material/Button';
import PrePhysicalExamination from "../components/pre-physical-exam/index";
import PhysicalExamination from "../components/physical-exam/index";
import PostPhysicalExamination from "../components/post-physical-exam/index";
import { Grid } from '@mui/material';

const steps = ['Pre Physical Examination', 'Physical Examination', 'Post Physical Examination'];

export default function Home() {
  const [activeStep, setActiveStep] = React.useState(0);
  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  return (
    <Grid container className={styles.container} justifyContent="center">
      <Grid item xs={11}>
        <Head>
          <title>Physical Examination Flow</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
      
        <main className={styles.main}>
          <Stepper activeStep={activeStep} sx={{ width: '100%', height:"10vh" }}>
            {steps.map((label, index) => {
              const stepProps = {};
              const labelProps = {};
              return (
                <Step key={label} {...stepProps}>
                  <StepLabel {...labelProps}>{label}</StepLabel>
                </Step>
              );
            })}
          </Stepper>
          <Box  sx={{ 
            display: 'flex', 
            flexDirection: 'row', 
            pt: 2, 
            overflow: "auto", 
            height: "80vh",
            alignItems: "center",
            justifyContent: "center"
          }} >
            { activeStep === 0 && <PrePhysicalExamination/>}
            { activeStep === 1 && <PhysicalExamination />}
            { activeStep === 2 && <PostPhysicalExamination />}
          </Box>
          <Box sx={{ height:"10vh" }}>
            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>
                <Button
                    color="inherit"
                    disabled={activeStep === 0}
                    onClick={handleBack}
                    sx={{ mr: 1 }}
                    variant="outlined"
                >
                    Restart
                </Button>
                <Box sx={{ flex: '1 1 auto' }} />

                <Button onClick={handleNext} variant="outlined">
                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}
                </Button>
              </Box>
          </Box>
        </main>
      </Grid>
    </Grid>
  );
}

